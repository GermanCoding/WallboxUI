Restoring from a backup (json dumps of contenttypes and data)

0. Find out your backend container's name. See BACKUP.txt for details.

1. Copy the backup files into the docker backend container, like this:
$ docker cp contenttype.json <backend container name>:/opt/wallbox-ui
$ docker cp data.json <backend container name>:/opt/wallbox-ui

2. Open a shell running within the docker backend container, like this:
$ docker exec -it <backend container name> bash

3. If the install is clean (i.e. the target database has not been initialized yet), run (from within the container shell)
$ python manage.py migrate
This will create the database tables. If the database was already initialized, the migration will simply do nothing (and confirm that no actions were performed). On a corrupted database this might fail though.

4. Delete any existing data (this includes autogenerated stuff from the above django migration) (from within the container shell): 
$ python manage.py sqlflush | python manage.py dbshell

5. Import the json data back into the database (from within the container shell):
$ python manage.py loaddata contenttype.json
$ python manage.py loaddata data.json

6. Verify or migrate the restored data to the latest database schema (from within the container shell):
$ python manage.py migrate

6. Done! A restart of the container should **not** be required. You can type "exit" to leave the container shell (or press CTRl+D).
